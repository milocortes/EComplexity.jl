var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#GitHub-installation","page":"Getting Started","title":"GitHub installation","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"To install EComplexity from GitHub, you must first have a working Julia installation on your computer. ","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Once Julia is set up, start a Julia session and add the EComplexity package:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"julia> ]\n\npkg> add https://github.com/milocortes/EComplexity.jl.git","category":"page"},{"location":"getting_started/#Usage","page":"Getting Started","title":"Usage","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# Import packages\nusing EComplexity\nusing CSV\nusing DataFrames\n\nusing ZipFile\nimport Downloads\n\n### Import trade data from CID Atlas\ndata_url = \"https://intl-atlas-downloads.s3.amazonaws.com/\"\nfile_name = \"country_hsproduct2digit_year.csv.zip\"\n\n# Downloads the file in the current working directory\nDownloads.download(data_url*file_name, file_name)\n\n# Extracts data from a ZIP file\ntrade_data_CID_atlas_archive = ZipFile.Reader(file_name)\n\n# Load data from the descompressed zip file\ndata = CSV.read(read(trade_data_CID_atlas_archive.files[1]), DataFrame)\n\n# Select specific columns of the dataframe\ndata = data[:,[:year,:location_code,:hs_product_code,:export_value]]\n\n# Subset rows \ncomplex_data = data[data.year .==2010,:]\n\n# Define column names for location, product and value\nvalue_col_name = \"export_value\"\nactiviy_col_name = \"hs_product_code\"\nplace_col_name = \"location_code\"\n\n# Calculate complexity metrics\ncdata = complexity_metrics(complex_data, value_col_name, activiy_col_name, place_col_name)\n\n## Calculate proximity matrix\n# Compute RCA\npaises_RCA = RCA(complex_data, value_col_name, activiy_col_name, place_col_name)\n\n# Compute M matrix\nM_rca = build_Mcp(paises_RCA, activiy_col_name, place_col_name, 1.0)\n\n# Compute proximity\nproximity_mat = proximity(M_rca, activiy_col_name, place_col_name)\n","category":"page"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"dede","category":"page"},{"location":"economic_complexity_theory/#Economic-Complexity","page":"Economic Complexity","title":"Economic Complexity","text":"","category":"section"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"The Economic Complexity Index (ECI) and the product complexity index (PCI) are metrics that infers information about countries’ productive capabilities from their export baskets.","category":"page"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"The ECI and PCI measures are calculated using an algorithm that operates on a binary country-product matrix M with elements M_cp=1 if country c has a revealed comparative advantage (RCA) > 1 in product p, where RCA is calculate using the Balassa index:","category":"page"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"    beginequation\n        RCA_cp =dfracx(cp)sum_i x(cp) Bigg  dfracsum_c x(cp)sum_cp x(cp)\n    endequation","category":"page"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"where x_cp is country c's exports of product p. RCA  measures whether a country c exports more of a product p, as a share of its total exports, than the \"average\" country (RCA1 not RCA1). ","category":"page"},{"location":"economic_complexity_theory/#Proximity","page":"Economic Complexity","title":"Proximity","text":"","category":"section"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"Formally, the proximity phi between products i and j is the minimum of the pairwise conditional probabilities of a country exporting a good given that it exports another.","category":"page"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"    beginequation\n        phi_ij = min biglbrace P(RCAx_iRCAx_j)P(RCAx_jRCAx_i) bigrbrace \n    endequation    ","category":"page"},{"location":"economic_complexity_theory/#Distance","page":"Economic Complexity","title":"Distance","text":"","category":"section"},{"location":"economic_complexity_theory/","page":"Economic Complexity","title":"Economic Complexity","text":"beginequation\n    d_cp = dfracsum_p(1-M_cp) phi_ppsum_p phi_pp\nendequation","category":"page"},{"location":"#EComplexity.jl-:-Economic-Complexity-in-Julia","page":"Introduction","title":"EComplexity.jl : Economic Complexity in Julia","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"EComplexity is a package to calculate economic complexity indices in Julia. The package is inspired by others implementations as py-ecomplexity.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The EComplexity package is developed by the Laboratorio de Desarrollo Regional team of the Escuela de Gobierno y Transformación Pública ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Pages = [\n    \"getting_started.md\",\n    \"economic_complexity_theory.md\"\n    ]","category":"page"}]
}
